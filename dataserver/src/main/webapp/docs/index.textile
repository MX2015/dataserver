h1. 1 工程介绍


bq. 工程主要实现公交系统后台服务的管理、主要是针对redis内存数据的接收、同步
工程主要包括如下几个功能，多线程控制，redis队列数据接收，和基于配置的数据解析

h2. 1.1 多线程控制

bq. 包名使用 com.gci.aptsserver.task
TaskManager 多线程管理类,使用 ScheduledExecutorService 线程池
StoreRunnable 主要功能的实现类,使用前需要注入 redisQueueKey 队列名称

bq. TaskController 管理类


* start 启动任务
* stop  停止任务
* list  当前正在运行的任务
* taskTypes 当前可以执行的任务



h2. 1.2 队列数据接收

bq. 队列使用redis队列，关于redis队列的性能预估如下，

# 多线程情况下，使用pop，在8个线程的情况下，吞吐量大约在 1w条/s,即单线程pop大约在 1200/
# 使用range和trim的组合效率大约在 1w/1.2s，不过不支持多线程并发
# 使用事务控制range和trim，保证操作的原子性，应该可以实现多线程和高速吞吐，后续可以再这方面进一步研究




h3.  1.3 队列数据基于配置解析  

bq. 队列数据按照  队列-类型-表-字段  的逻辑设计
即一个队列可以传输多重类型的数据，每种类型的数据可以对应多张数据库表，每张表定义表的操作类型，主键，字段及字段类型等内容
